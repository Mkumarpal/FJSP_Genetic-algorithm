import random
from iga_manojpalcode06_04 import manojpal_code_1


#
# operation_table = {'0': {'0': {'0': 1000, '1': 8, '2': 1000, '3': 1000, '4': 1000, '5': 3, '6': 2, '7': 1000, '8': 5, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '1': {'0': 2, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 7, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '2': {'0': 4, '1': 7, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 4, '7': 1000, '8': 1, '9': 4, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '3': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 2, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '4': {'0': 1000, '1': 1000, '2': 8, '3': 1000, '4': 8, '5': 1000, '6': 5, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '5': {'0': 3, '1': 5, '2': 8, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 8, '8': 1000, '9': 9, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '6': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 6, '5': 2, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '7': {'0': 9, '1': 5, '2': 1000, '3': 6, '4': 7, '5': 1000, '6': 1000, '7': 1000, '8': 1, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '8': {'0': 2, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 6, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '9': {'0': 1000, '1': 1000, '2': 1000, '3': 1000, '4': 6, '5': 1000, '6': 9, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '10': {'0': 1000, '1': 1000, '2': 1000, '3': 8, '4': 1000, '5': 1000, '6': 2, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '11': {'0': 8, '1': 1, '2': 7, '3': 2, '4': 8, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '12': {'0': 1000, '1': 1000, '2': 1000, '3': 5, '4': 1000, '5': 1000, '6': 1000, '7': 9, '8': 1000, '9': 2, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '13': {'0': 1000, '1': 1000, '2': 7, '3': 1000, '4': 1000, '5': 1000, '6': 5, '7': 1000, '8': 3, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '14': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 8, '5': 1000, '6': 1000, '7': 1000, '8': 4, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}}, '1': {'0': {'0': 3, '1': 5, '2': 8, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 8, '8': 1000, '9': 9, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '1': {'0': 4, '1': 7, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 4, '7': 1000, '8': 1, '9': 4, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '2': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 6, '5': 2, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '3': {'0': 8, '1': 1, '2': 7, '3': 2, '4': 8, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '4': {'0': 1000, '1': 1000, '2': 1000, '3': 8, '4': 1000, '5': 1000, '6': 2, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '5': {'0': 2, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 6, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '6': {'0': 1000, '1': 1000, '2': 1000, '3': 5, '4': 1000, '5': 1000, '6': 1000, '7': 9, '8': 1000, '9': 2, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '7': {'0': 1000, '1': 1000, '2': 1000, '3': 1000, '4': 6, '5': 1000, '6': 9, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '8': {'0': 1000, '1': 1000, '2': 7, '3': 1000, '4': 1000, '5': 1000, '6': 5, '7': 1000, '8': 3, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '9': {'0': 1000, '1': 1000, '2': 8, '3': 1000, '4': 8, '5': 1000, '6': 5, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '10': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 8, '5': 1000, '6': 1000, '7': 1000, '8': 4, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '11': {'0': 2, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 7, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '12': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 2, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '13': {'0': 1000, '1': 8, '2': 1000, '3': 1000, '4': 1000, '5': 3, '6': 2, '7': 1000, '8': 5, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '14': {'0': 9, '1': 5, '2': 1000, '3': 6, '4': 7, '5': 1000, '6': 1000, '7': 1000, '8': 1, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}}, '2': {'0': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 2, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '1': {'0': 1000, '1': 1000, '2': 1000, '3': 1000, '4': 6, '5': 1000, '6': 9, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '2': {'0': 2, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 6, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '3': {'0': 1000, '1': 1000, '2': 1000, '3': 8, '4': 1000, '5': 1000, '6': 2, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '4': {'0': 8, '1': 1, '2': 7, '3': 2, '4': 8, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '5': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 8, '5': 1000, '6': 1000, '7': 1000, '8': 4, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '6': {'0': 2, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 7, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '7': {'0': 1000, '1': 1000, '2': 7, '3': 1000, '4': 1000, '5': 1000, '6': 5, '7': 1000, '8': 3, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '8': {'0': 4, '1': 7, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 4, '7': 1000, '8': 1, '9': 4, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '9': {'0': 1000, '1': 8, '2': 1000, '3': 1000, '4': 1000, '5': 3, '6': 2, '7': 1000, '8': 5, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '10': {'0': 3, '1': 5, '2': 8, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 8, '8': 1000, '9': 9, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '11': {'0': 1000, '1': 1000, '2': 1000, '3': 5, '4': 1000, '5': 1000, '6': 1000, '7': 9, '8': 1000, '9': 2, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '12': {'0': 9, '1': 5, '2': 1000, '3': 6, '4': 7, '5': 1000, '6': 1000, '7': 1000, '8': 1, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '13': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 6, '5': 2, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '14': {'0': 1000, '1': 1000, '2': 8, '3': 1000, '4': 8, '5': 1000, '6': 5, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}}, '3': {'0': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 6, '5': 2, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '1': {'0': 9, '1': 5, '2': 1000, '3': 6, '4': 7, '5': 1000, '6': 1000, '7': 1000, '8': 1, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '2': {'0': 3, '1': 5, '2': 8, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 8, '8': 1000, '9': 9, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '3': {'0': 8, '1': 1, '2': 7, '3': 2, '4': 8, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '4': {'0': 1000, '1': 1000, '2': 1000, '3': 8, '4': 1000, '5': 1000, '6': 2, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '5': {'0': 2, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 6, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '6': {'0': 1000, '1': 1000, '2': 8, '3': 1000, '4': 8, '5': 1000, '6': 5, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '7': {'0': 2, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 7, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '8': {'0': 1000, '1': 1000, '2': 7, '3': 1000, '4': 1000, '5': 1000, '6': 5, '7': 1000, '8': 3, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '9': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 8, '5': 1000, '6': 1000, '7': 1000, '8': 4, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '10': {'0': 1000, '1': 8, '2': 1000, '3': 1000, '4': 1000, '5': 3, '6': 2, '7': 1000, '8': 5, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '11': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 2, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '12': {'0': 4, '1': 7, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 4, '7': 1000, '8': 1, '9': 4, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '13': {'0': 1000, '1': 1000, '2': 1000, '3': 1000, '4': 6, '5': 1000, '6': 9, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '14': {'0': 1000, '1': 1000, '2': 1000, '3': 5, '4': 1000, '5': 1000, '6': 1000, '7': 9, '8': 1000, '9': 2, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}}, '4': {'0': {'0': 1000, '1': 1000, '2': 1000, '3': 5, '4': 1000, '5': 1000, '6': 1000, '7': 9, '8': 1000, '9': 2, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '1': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 2, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '2': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 8, '5': 1000, '6': 1000, '7': 1000, '8': 4, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '3': {'0': 2, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 7, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '4': {'0': 1000, '1': 1000, '2': 8, '3': 1000, '4': 8, '5': 1000, '6': 5, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '5': {'0': 8, '1': 1, '2': 7, '3': 2, '4': 8, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '6': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 6, '5': 2, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '7': {'0': 1000, '1': 1000, '2': 7, '3': 1000, '4': 1000, '5': 1000, '6': 5, '7': 1000, '8': 3, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '8': {'0': 1000, '1': 8, '2': 1000, '3': 1000, '4': 1000, '5': 3, '6': 2, '7': 1000, '8': 5, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '9': {'0': 2, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 6, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '10': {'0': 4, '1': 7, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 4, '7': 1000, '8': 1, '9': 4, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '11': {'0': 1000, '1': 1000, '2': 1000, '3': 1000, '4': 6, '5': 1000, '6': 9, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '12': {'0': 9, '1': 5, '2': 1000, '3': 6, '4': 7, '5': 1000, '6': 1000, '7': 1000, '8': 1, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '13': {'0': 3, '1': 5, '2': 8, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 8, '8': 1000, '9': 9, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '14': {'0': 1000, '1': 1000, '2': 1000, '3': 8, '4': 1000, '5': 1000, '6': 2, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}}, '5': {'0': {'0': 1000, '1': 1000, '2': 8, '3': 1000, '4': 8, '5': 1000, '6': 5, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '1': {'0': 3, '1': 5, '2': 8, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 8, '8': 1000, '9': 9, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '2': {'0': 1000, '1': 1000, '2': 1000, '3': 1000, '4': 6, '5': 1000, '6': 9, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '3': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 6, '5': 2, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '4': {'0': 9, '1': 5, '2': 1000, '3': 6, '4': 7, '5': 1000, '6': 1000, '7': 1000, '8': 1, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '5': {'0': 1000, '1': 1000, '2': 1000, '3': 8, '4': 1000, '5': 1000, '6': 2, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '6': {'0': 2, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 7, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '7': {'0': 8, '1': 1, '2': 7, '3': 2, '4': 8, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '8': {'0': 4, '1': 7, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 4, '7': 1000, '8': 1, '9': 4, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '9': {'0': 1000, '1': 8, '2': 1000, '3': 1000, '4': 1000, '5': 3, '6': 2, '7': 1000, '8': 5, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '10': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 2, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '11': {'0': 1000, '1': 1000, '2': 7, '3': 1000, '4': 1000, '5': 1000, '6': 5, '7': 1000, '8': 3, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '12': {'0': 2, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 6, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '13': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 8, '5': 1000, '6': 1000, '7': 1000, '8': 4, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '14': {'0': 1000, '1': 1000, '2': 1000, '3': 5, '4': 1000, '5': 1000, '6': 1000, '7': 9, '8': 1000, '9': 2, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}}, '6': {'0': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 6, '5': 2, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '1': {'0': 1000, '1': 1000, '2': 1000, '3': 5, '4': 1000, '5': 1000, '6': 1000, '7': 9, '8': 1000, '9': 2, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '2': {'0': 1000, '1': 1000, '2': 8, '3': 1000, '4': 8, '5': 1000, '6': 5, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '3': {'0': 3, '1': 5, '2': 8, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 8, '8': 1000, '9': 9, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '4': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 2, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '5': {'0': 2, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 7, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '6': {'0': 8, '1': 1, '2': 7, '3': 2, '4': 8, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '7': {'0': 1000, '1': 1000, '2': 7, '3': 1000, '4': 1000, '5': 1000, '6': 5, '7': 1000, '8': 3, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '8': {'0': 4, '1': 7, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 4, '7': 1000, '8': 1, '9': 4, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '9': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 8, '5': 1000, '6': 1000, '7': 1000, '8': 4, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '10': {'0': 2, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 6, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '11': {'0': 1000, '1': 8, '2': 1000, '3': 1000, '4': 1000, '5': 3, '6': 2, '7': 1000, '8': 5, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '12': {'0': 1000, '1': 1000, '2': 1000, '3': 1000, '4': 6, '5': 1000, '6': 9, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '13': {'0': 1000, '1': 1000, '2': 1000, '3': 8, '4': 1000, '5': 1000, '6': 2, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '14': {'0': 9, '1': 5, '2': 1000, '3': 6, '4': 7, '5': 1000, '6': 1000, '7': 1000, '8': 1, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}}, '7': {'0': {'0': 4, '1': 7, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 4, '7': 1000, '8': 1, '9': 4, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '1': {'0': 1000, '1': 1000, '2': 7, '3': 1000, '4': 1000, '5': 1000, '6': 5, '7': 1000, '8': 3, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '2': {'0': 1000, '1': 1000, '2': 8, '3': 1000, '4': 8, '5': 1000, '6': 5, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '3': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 2, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '4': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 6, '5': 2, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '5': {'0': 9, '1': 5, '2': 1000, '3': 6, '4': 7, '5': 1000, '6': 1000, '7': 1000, '8': 1, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '6': {'0': 1000, '1': 1000, '2': 1000, '3': 5, '4': 1000, '5': 1000, '6': 1000, '7': 9, '8': 1000, '9': 2, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '7': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 8, '5': 1000, '6': 1000, '7': 1000, '8': 4, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '8': {'0': 2, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 7, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '9': {'0': 1000, '1': 8, '2': 1000, '3': 1000, '4': 1000, '5': 3, '6': 2, '7': 1000, '8': 5, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '10': {'0': 3, '1': 5, '2': 8, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 8, '8': 1000, '9': 9, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '11': {'0': 1000, '1': 1000, '2': 1000, '3': 8, '4': 1000, '5': 1000, '6': 2, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '12': {'0': 2, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 6, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '13': {'0': 8, '1': 1, '2': 7, '3': 2, '4': 8, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '14': {'0': 1000, '1': 1000, '2': 1000, '3': 1000, '4': 6, '5': 1000, '6': 9, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}}, '8': {'0': {'0': 1000, '1': 8, '2': 1000, '3': 1000, '4': 1000, '5': 3, '6': 2, '7': 1000, '8': 5, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '1': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 8, '5': 1000, '6': 1000, '7': 1000, '8': 4, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '2': {'0': 1000, '1': 1000, '2': 8, '3': 1000, '4': 8, '5': 1000, '6': 5, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '3': {'0': 4, '1': 7, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 4, '7': 1000, '8': 1, '9': 4, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '4': {'0': 8, '1': 1, '2': 7, '3': 2, '4': 8, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '5': {'0': 1000, '1': 1000, '2': 1000, '3': 8, '4': 1000, '5': 1000, '6': 2, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '6': {'0': 2, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 7, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '7': {'0': 1000, '1': 1000, '2': 1000, '3': 5, '4': 1000, '5': 1000, '6': 1000, '7': 9, '8': 1000, '9': 2, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '8': {'0': 3, '1': 5, '2': 8, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 8, '8': 1000, '9': 9, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '9': {'0': 2, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 6, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '10': {'0': 9, '1': 5, '2': 1000, '3': 6, '4': 7, '5': 1000, '6': 1000, '7': 1000, '8': 1, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '11': {'0': 1000, '1': 1000, '2': 7, '3': 1000, '4': 1000, '5': 1000, '6': 5, '7': 1000, '8': 3, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '12': {'0': 1000, '1': 1000, '2': 1000, '3': 1000, '4': 6, '5': 1000, '6': 9, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '13': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 2, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '14': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 6, '5': 2, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}}, '9': {'0': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 2, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '1': {'0': 1000, '1': 8, '2': 1000, '3': 1000, '4': 1000, '5': 3, '6': 2, '7': 1000, '8': 5, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '2': {'0': 1000, '1': 1000, '2': 1000, '3': 5, '4': 1000, '5': 1000, '6': 1000, '7': 9, '8': 1000, '9': 2, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '3': {'0': 1000, '1': 1000, '2': 8, '3': 1000, '4': 8, '5': 1000, '6': 5, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '4': {'0': 1000, '1': 1000, '2': 7, '3': 1000, '4': 1000, '5': 1000, '6': 5, '7': 1000, '8': 3, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '5': {'0': 2, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 6, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '6': {'0': 1000, '1': 1000, '2': 1000, '3': 1000, '4': 6, '5': 1000, '6': 9, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '7': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 8, '5': 1000, '6': 1000, '7': 1000, '8': 4, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '8': {'0': 4, '1': 7, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 4, '7': 1000, '8': 1, '9': 4, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '9': {'0': 9, '1': 5, '2': 1000, '3': 6, '4': 7, '5': 1000, '6': 1000, '7': 1000, '8': 1, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '10': {'0': 3, '1': 5, '2': 8, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 8, '8': 1000, '9': 9, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '11': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 6, '5': 2, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '12': {'0': 8, '1': 1, '2': 7, '3': 2, '4': 8, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '13': {'0': 1000, '1': 1000, '2': 1000, '3': 8, '4': 1000, '5': 1000, '6': 2, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '14': {'0': 2, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 7, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}}}
#
# setup_table = {'0': {'0': {'0': 1000, '1': 8, '2': 1000, '3': 1000, '4': 1000, '5': 2, '6': 2, '7': 1000, '8': 2, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '1': {'0': 2, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 1, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '2': {'0': 3, '1': 1, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1, '7': 1000, '8': 1, '9': 1, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '3': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '4': {'0': 1000, '1': 1000, '2': 1, '3': 1000, '4': 7, '5': 1000, '6': 4, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '5': {'0': 1, '1': 4, '2': 2, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1, '8': 1000, '9': 1, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '6': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 5, '5': 1, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '7': {'0': 6, '1': 4, '2': 1000, '3': 6, '4': 5, '5': 1000, '6': 1000, '7': 1000, '8': 1, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '8': {'0': 2, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 1, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '9': {'0': 1000, '1': 1000, '2': 1000, '3': 1000, '4': 4, '5': 1000, '6': 4, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '10': {'0': 1000, '1': 1000, '2': 1000, '3': 6, '4': 1000, '5': 1000, '6': 2, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '11': {'0': 5, '1': 1, '2': 5, '3': 2, '4': 2, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '12': {'0': 1000, '1': 1000, '2': 1000, '3': 5, '4': 1000, '5': 1000, '6': 1000, '7': 5, '8': 1000, '9': 2, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '13': {'0': 1000, '1': 1000, '2': 3, '3': 1000, '4': 1000, '5': 1000, '6': 2, '7': 1000, '8': 1, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '14': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 3, '5': 1000, '6': 1000, '7': 1000, '8': 2, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}}, '1': {'0': {'0': 3, '1': 5, '2': 7, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 4, '8': 1000, '9': 1, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '1': {'0': 4, '1': 4, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1, '7': 1000, '8': 1, '9': 1, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '2': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 4, '5': 1, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '3': {'0': 2, '1': 1, '2': 7, '3': 2, '4': 6, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '4': {'0': 1000, '1': 1000, '2': 1000, '3': 6, '4': 1000, '5': 1000, '6': 1, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '5': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 5, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '6': {'0': 1000, '1': 1000, '2': 1000, '3': 5, '4': 1000, '5': 1000, '6': 1000, '7': 4, '8': 1000, '9': 2, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '7': {'0': 1000, '1': 1000, '2': 1000, '3': 1000, '4': 4, '5': 1000, '6': 3, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '8': {'0': 1000, '1': 1000, '2': 2, '3': 1000, '4': 1000, '5': 1000, '6': 1, '7': 1000, '8': 1, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '9': {'0': 1000, '1': 1000, '2': 8, '3': 1000, '4': 4, '5': 1000, '6': 4, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '10': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 3, '5': 1000, '6': 1000, '7': 1000, '8': 4, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '11': {'0': 2, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 2, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '12': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '13': {'0': 1000, '1': 4, '2': 1000, '3': 1000, '4': 1000, '5': 3, '6': 2, '7': 1000, '8': 2, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '14': {'0': 1, '1': 4, '2': 1000, '3': 3, '4': 4, '5': 1000, '6': 1000, '7': 1000, '8': 1, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}}, '2': {'0': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '1': {'0': 1000, '1': 1000, '2': 1000, '3': 1000, '4': 2, '5': 1000, '6': 8, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '2': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 2, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '3': {'0': 1000, '1': 1000, '2': 1000, '3': 5, '4': 1000, '5': 1000, '6': 2, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '4': {'0': 6, '1': 1, '2': 4, '3': 2, '4': 5, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '5': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 8, '5': 1000, '6': 1000, '7': 1000, '8': 2, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '6': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 3, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '7': {'0': 1000, '1': 1000, '2': 1, '3': 1000, '4': 1000, '5': 1000, '6': 1, '7': 1000, '8': 3, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '8': {'0': 1, '1': 5, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 3, '7': 1000, '8': 1, '9': 4, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '9': {'0': 1000, '1': 4, '2': 1000, '3': 1000, '4': 1000, '5': 1, '6': 2, '7': 1000, '8': 5, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '10': {'0': 1, '1': 2, '2': 4, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 6, '8': 1000, '9': 3, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '11': {'0': 1000, '1': 1000, '2': 1000, '3': 1, '4': 1000, '5': 1000, '6': 1000, '7': 7, '8': 1000, '9': 2, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '12': {'0': 8, '1': 5, '2': 1000, '3': 3, '4': 6, '5': 1000, '6': 1000, '7': 1000, '8': 1, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '13': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 2, '5': 1, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '14': {'0': 1000, '1': 1000, '2': 5, '3': 1000, '4': 6, '5': 1000, '6': 4, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}}, '3': {'0': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 5, '5': 2, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '1': {'0': 2, '1': 1, '2': 1000, '3': 4, '4': 1, '5': 1000, '6': 1000, '7': 1000, '8': 1, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '2': {'0': 2, '1': 4, '2': 2, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 4, '8': 1000, '9': 1, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '3': {'0': 6, '1': 1, '2': 5, '3': 1, '4': 1, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '4': {'0': 1000, '1': 1000, '2': 1000, '3': 7, '4': 1000, '5': 1000, '6': 2, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '5': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 2, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '6': {'0': 1000, '1': 1000, '2': 4, '3': 1000, '4': 6, '5': 1000, '6': 5, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '7': {'0': 2, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 3, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '8': {'0': 1000, '1': 1000, '2': 7, '3': 1000, '4': 1000, '5': 1000, '6': 1, '7': 1000, '8': 2, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '9': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 1, '5': 1000, '6': 1000, '7': 1000, '8': 3, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '10': {'0': 1000, '1': 4, '2': 1000, '3': 1000, '4': 1000, '5': 2, '6': 1, '7': 1000, '8': 2, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '11': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 2, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '12': {'0': 2, '1': 1, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1, '7': 1000, '8': 1, '9': 3, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '13': {'0': 1000, '1': 1000, '2': 1000, '3': 1000, '4': 6, '5': 1000, '6': 1, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '14': {'0': 1000, '1': 1000, '2': 1000, '3': 4, '4': 1000, '5': 1000, '6': 1000, '7': 6, '8': 1000, '9': 1, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}}, '4': {'0': {'0': 1000, '1': 1000, '2': 1000, '3': 4, '4': 1000, '5': 1000, '6': 1000, '7': 1, '8': 1000, '9': 1, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '1': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '2': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 5, '5': 1000, '6': 1000, '7': 1000, '8': 4, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '3': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 1, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '4': {'0': 1000, '1': 1000, '2': 1, '3': 1000, '4': 4, '5': 1000, '6': 5, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '5': {'0': 5, '1': 1, '2': 3, '3': 1, '4': 6, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '6': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 4, '5': 2, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '7': {'0': 1000, '1': 1000, '2': 5, '3': 1000, '4': 1000, '5': 1000, '6': 4, '7': 1000, '8': 2, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '8': {'0': 1000, '1': 8, '2': 1000, '3': 1000, '4': 1000, '5': 1, '6': 2, '7': 1000, '8': 2, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '9': {'0': 2, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 2, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '10': {'0': 4, '1': 3, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 2, '7': 1000, '8': 1, '9': 3, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '11': {'0': 1000, '1': 1000, '2': 1000, '3': 1000, '4': 6, '5': 1000, '6': 9, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '12': {'0': 9, '1': 3, '2': 1000, '3': 1, '4': 6, '5': 1000, '6': 1000, '7': 1000, '8': 1, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '13': {'0': 2, '1': 3, '2': 1, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 5, '8': 1000, '9': 2, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '14': {'0': 1000, '1': 1000, '2': 1000, '3': 5, '4': 1000, '5': 1000, '6': 2, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}}, '5': {'0': {'0': 1000, '1': 1000, '2': 3, '3': 1000, '4': 6, '5': 1000, '6': 2, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '1': {'0': 1, '1': 5, '2': 8, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 7, '8': 1000, '9': 7, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '2': {'0': 1000, '1': 1000, '2': 1000, '3': 1000, '4': 4, '5': 1000, '6': 3, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '3': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 4, '5': 2, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '4': {'0': 4, '1': 1, '2': 1000, '3': 2, '4': 3, '5': 1000, '6': 1000, '7': 1000, '8': 1, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '5': {'0': 1000, '1': 1000, '2': 1000, '3': 1, '4': 1000, '5': 1000, '6': 2, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '6': {'0': 2, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 3, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '7': {'0': 6, '1': 1, '2': 6, '3': 1, '4': 6, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '8': {'0': 1, '1': 4, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 4, '7': 1000, '8': 1, '9': 2, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '9': {'0': 1000, '1': 3, '2': 1000, '3': 1000, '4': 1000, '5': 3, '6': 1, '7': 1000, '8': 2, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '10': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '11': {'0': 1000, '1': 1000, '2': 5, '3': 1000, '4': 1000, '5': 1000, '6': 1, '7': 1000, '8': 3, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '12': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 1, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '13': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 3, '5': 1000, '6': 1000, '7': 1000, '8': 4, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '14': {'0': 1000, '1': 1000, '2': 1000, '3': 3, '4': 1000, '5': 1000, '6': 1000, '7': 3, '8': 1000, '9': 1, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}}, '6': {'0': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 2, '5': 2, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '1': {'0': 1000, '1': 1000, '2': 1000, '3': 2, '4': 1000, '5': 1000, '6': 1000, '7': 7, '8': 1000, '9': 1, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '2': {'0': 1000, '1': 1000, '2': 6, '3': 1000, '4': 8, '5': 1000, '6': 4, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '3': {'0': 1, '1': 5, '2': 8, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 4, '8': 1000, '9': 7, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '4': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '5': {'0': 2, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 3, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '6': {'0': 4, '1': 1, '2': 1, '3': 1, '4': 1, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '7': {'0': 1000, '1': 1000, '2': 7, '3': 1000, '4': 1000, '5': 1000, '6': 3, '7': 1000, '8': 1, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '8': {'0': 3, '1': 6, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 4, '7': 1000, '8': 1, '9': 2, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '9': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 6, '5': 1000, '6': 1000, '7': 1000, '8': 1, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '10': {'0': 2, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 6, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '11': {'0': 1000, '1': 8, '2': 1000, '3': 1000, '4': 1000, '5': 1, '6': 1, '7': 1000, '8': 2, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '12': {'0': 1000, '1': 1000, '2': 1000, '3': 1000, '4': 3, '5': 1000, '6': 1, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '13': {'0': 1000, '1': 1000, '2': 1000, '3': 4, '4': 1000, '5': 1000, '6': 1, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '14': {'0': 3, '1': 4, '2': 1000, '3': 5, '4': 3, '5': 1000, '6': 1000, '7': 1000, '8': 1, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}}, '7': {'0': {'0': 2, '1': 5, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 2, '7': 1000, '8': 1, '9': 4, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '1': {'0': 1000, '1': 1000, '2': 6, '3': 1000, '4': 1000, '5': 1000, '6': 1, '7': 1000, '8': 2, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '2': {'0': 1000, '1': 1000, '2': 3, '3': 1000, '4': 6, '5': 1000, '6': 1, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '3': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '4': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 2, '5': 2, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '5': {'0': 7, '1': 3, '2': 1000, '3': 2, '4': 2, '5': 1000, '6': 1000, '7': 1000, '8': 1, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '6': {'0': 1000, '1': 1000, '2': 1000, '3': 5, '4': 1000, '5': 1000, '6': 1000, '7': 3, '8': 1000, '9': 2, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '7': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 4, '5': 1000, '6': 1000, '7': 1000, '8': 3, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '8': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 2, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '9': {'0': 1000, '1': 5, '2': 1000, '3': 1000, '4': 1000, '5': 2, '6': 2, '7': 1000, '8': 3, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '10': {'0': 2, '1': 2, '2': 1, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 2, '8': 1000, '9': 7, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '11': {'0': 1000, '1': 1000, '2': 1000, '3': 7, '4': 1000, '5': 1000, '6': 2, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '12': {'0': 2, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 3, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '13': {'0': 8, '1': 1, '2': 1, '3': 2, '4': 5, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '14': {'0': 1000, '1': 1000, '2': 1000, '3': 1000, '4': 3, '5': 1000, '6': 3, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}}, '8': {'0': {'0': 1000, '1': 4, '2': 1000, '3': 1000, '4': 1000, '5': 3, '6': 1, '7': 1000, '8': 2, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '1': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 3, '5': 1000, '6': 1000, '7': 1000, '8': 1, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '2': {'0': 1000, '1': 1000, '2': 7, '3': 1000, '4': 5, '5': 1000, '6': 5, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '3': {'0': 1, '1': 5, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 4, '7': 1000, '8': 1, '9': 1, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '4': {'0': 6, '1': 1, '2': 2, '3': 2, '4': 8, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '5': {'0': 1000, '1': 1000, '2': 1000, '3': 2, '4': 1000, '5': 1000, '6': 1, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '6': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 2, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '7': {'0': 1000, '1': 1000, '2': 1000, '3': 2, '4': 1000, '5': 1000, '6': 1000, '7': 4, '8': 1000, '9': 1, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '8': {'0': 3, '1': 2, '2': 7, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 4, '8': 1000, '9': 4, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '9': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 5, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '10': {'0': 7, '1': 5, '2': 1000, '3': 6, '4': 5, '5': 1000, '6': 1000, '7': 1000, '8': 1, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '11': {'0': 1000, '1': 1000, '2': 1, '3': 1000, '4': 1000, '5': 1000, '6': 5, '7': 1000, '8': 1, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '12': {'0': 1000, '1': 1000, '2': 1000, '3': 1000, '4': 1, '5': 1000, '6': 9, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '13': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '14': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 5, '5': 1, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}}, '9': {'0': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '1': {'0': 1000, '1': 7, '2': 1000, '3': 1000, '4': 1000, '5': 2, '6': 2, '7': 1000, '8': 1, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '2': {'0': 1000, '1': 1000, '2': 1000, '3': 1, '4': 1000, '5': 1000, '6': 1000, '7': 2, '8': 1000, '9': 1, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '3': {'0': 1000, '1': 1000, '2': 8, '3': 1000, '4': 5, '5': 1000, '6': 5, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '4': {'0': 1000, '1': 1000, '2': 3, '3': 1000, '4': 1000, '5': 1000, '6': 4, '7': 1000, '8': 1, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '5': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 6, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '6': {'0': 1000, '1': 1000, '2': 1000, '3': 1000, '4': 6, '5': 1000, '6': 1, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '7': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 3, '5': 1000, '6': 1000, '7': 1000, '8': 2, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '8': {'0': 3, '1': 3, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 3, '7': 1000, '8': 1, '9': 4, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '9': {'0': 7, '1': 5, '2': 1000, '3': 1, '4': 3, '5': 1000, '6': 1000, '7': 1000, '8': 1, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '10': {'0': 2, '1': 4, '2': 1, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1, '8': 1000, '9': 7, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '11': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 2, '5': 1, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '12': {'0': 2, '1': 1, '2': 4, '3': 2, '4': 3, '5': 1000, '6': 1000, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '13': {'0': 1000, '1': 1000, '2': 1000, '3': 7, '4': 1000, '5': 1000, '6': 1, '7': 1000, '8': 1000, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}, '14': {'0': 1, '1': 1000, '2': 1000, '3': 1000, '4': 1000, '5': 1000, '6': 1000, '7': 1000, '8': 3, '9': 1000, '10': 1000, '11': 1000, '12': 1000, '13': 1000, '14': 1000}}}
#
# Transport_Table = {'0': {'0': 0, '1': 4, '2': 1, '3': 4, '4': 1, '5': 3, '6': 2, '7': 5, '8': 4, '9': 2, '10': 1, '11': 5, '12': 5, '13': 3, '14': 2}, '1': {'0': 5, '1': 0, '2': 2, '3': 1, '4': 4, '5': 1, '6': 1, '7': 1, '8': 3, '9': 1, '10': 1, '11': 3, '12': 4, '13': 4, '14': 1}, '2': {'0': 3, '1': 4, '2': 0, '3': 2, '4': 4, '5': 5, '6': 1, '7': 1, '8': 4, '9': 2, '10': 4, '11': 1, '12': 1, '13': 3, '14': 4}, '3': {'0': 3, '1': 3, '2': 3, '3': 0, '4': 1, '5': 1, '6': 5, '7': 4, '8': 4, '9': 2, '10': 3, '11': 2, '12': 2, '13': 4, '14': 3}, '4': {'0': 5, '1': 5, '2': 3, '3': 4, '4': 0, '5': 2, '6': 1, '7': 2, '8': 3, '9': 3, '10': 4, '11': 2, '12': 3, '13': 4, '14': 5}, '5': {'0': 1, '1': 2, '2': 3, '3': 3, '4': 4, '5': 0, '6': 2, '7': 4, '8': 4, '9': 4, '10': 1, '11': 5, '12': 1, '13': 5, '14': 1}, '6': {'0': 1, '1': 1, '2': 3, '3': 1, '4': 4, '5': 5, '6': 0, '7': 1, '8': 2, '9': 3, '10': 4, '11': 4, '12': 4, '13': 1, '14': 3}, '7': {'0': 1, '1': 3, '2': 4, '3': 4, '4': 2, '5': 5, '6': 5, '7': 0, '8': 2, '9': 1, '10': 2, '11': 1, '12': 1, '13': 1, '14': 3}, '8': {'0': 4, '1': 1, '2': 2, '3': 2, '4': 5, '5': 5, '6': 1, '7': 3, '8': 0, '9': 4, '10': 5, '11': 4, '12': 5, '13': 5, '14': 4}, '9': {'0': 5, '1': 1, '2': 1, '3': 4, '4': 3, '5': 1, '6': 5, '7': 4, '8': 1, '9': 0, '10': 4, '11': 5, '12': 2, '13': 3, '14': 3}, '10': {'0': 4, '1': 1, '2': 3, '3': 5, '4': 3, '5': 2, '6': 5, '7': 1, '8': 5, '9': 5, '10': 0, '11': 5, '12': 3, '13': 2, '14': 2}, '11': {'0': 2, '1': 5, '2': 2, '3': 2, '4': 4, '5': 2, '6': 1, '7': 3, '8': 1, '9': 4, '10': 3, '11': 0, '12': 2, '13': 5, '14': 3}, '12': {'0': 2, '1': 4, '2': 3, '3': 3, '4': 5, '5': 3, '6': 2, '7': 5, '8': 4, '9': 2, '10': 2, '11': 3, '12': 0, '13': 2, '14': 3}, '13': {'0': 2, '1': 4, '2': 5, '3': 2, '4': 2, '5': 3, '6': 1, '7': 2, '8': 1, '9': 4, '10': 5, '11': 1, '12': 1, '13': 0, '14': 2}, '14': {'0': 1, '1': 5, '2': 2, '3': 3, '4': 2, '5': 3, '6': 1, '7': 2, '8': 5, '9': 4, '10': 1, '11': 3, '12': 4, '13': 5, '14': 0}}
#
# list_generated = []

operation_table = {
    "0": {
        "0": {
            "0": 2,
            "1": 5,
            "2": 4,
            "3": 1,
            "4": 2
        },
        "1": {
            "0": 5,
            "1": 4,
            "2": 5,
            "3": 7,
            "4": 5
        },
        "2": {
            "0": 4,
            "1": 5,
            "2": 5,
            "3": 4,
            "4": 5
        }
    },
    "1": {
        "0": {
            "0": 2,
            "1": 5,
            "2": 4,
            "3": 7,
            "4": 8

        },
        "1": {
            "0": 5,
            "1": 6,
            "2": 9,
            "3": 8,
            "4": 5
        },
        "2": {
            "0": 4,
            "1": 5,
            "2": 4,
            "3": 54,
            "4": 5
        },
    },
    "2": {
        "0": {
            "0": 9,
            "1": 8,
            "2": 6,
            "3": 7,
            "4": 9
        },
        "1": {
            "0": 6,
            "1": 1,
            "2": 2,
            "3": 5,
            "4": 4
        },
        "2": {
            "0": 2,
            "1": 5,
            "2": 4,
            "3": 2,
            "4": 4
        },
        "3": {
            "0": 4,
            "1": 5,
            "2": 2,
            "3": 1,
            "4": 5
        }
    },
    "3": {
        "0": {
            "0": 1,
            "1": 5,
            "2": 2,
            "3": 4,
            "4": 12,
        },
        "1": {
            "0": 5,
            "1": 1,
            "2": 2,
            "3": 1,
            "4": 2,
        }
    }
}
setup_table = {
    "0": {
        "0": {
            "0": 1,
            "1": 3,
            "2": 1,
            "3": 1,
            "4": 2
        },
        "1": {
            "0": 3,
            "1": 1,
            "2": 2,
            "3": 6,
            "4": 1
        },
        "2":{
            "0": 1,
            "1": 4,
            "2": 4,
            "3": 2,
            "4": 2
        }

    },
    "1": {
        "0": {
            "0": 2,
            "1": 4,
            "2": 1,
            "3": 5,
            "4": 7
        },
        "1": {
            "0": 1,
            "1": 6,
            "2": 7,
            "3": 4,
            "4": 3
        },
        "2":{
            "0": 2,
            "1": 3,
            "2": 3,
            "3": 43,
            "4": 4
        }

    },
    "2": {
        "0": {
            "0": 4,
            "1": 7,
            "2": 4,
            "3": 3,
            "4": 9
        },
        "1": {
            "0": 6,
            "1": 1,
            "2": 2,
            "3": 3,
            "4": 1
        },
        "2":{
            "0": 1,
            "1": 5,
            "2": 1,
            "3": 1,
            "4": 2
        },
        "3":{
            "0": 4,
            "1": 1,
            "2": 2,
            "3": 1,
            "4": 3
        }

    },
    "3": {
        "0": {
            "0": 1,
            "1": 1,
            "2": 1,
            "3": 8,
            "4": 8
        },
        "1": {
            "0": 4,
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 1
        }

    }
}
Transport_Table = {
    "0": {
            "0": 0,
            "1": 4,
            "2": 2,
            "3": 1,
            "4": 5
        },
    "1": {
            "0": 1,
            "1": 0,
            "2": 5,
            "3": 1,
            "4": 5
        },
    "2": {
            "0": 1,
            "1": 3,
            "2": 0,
            "3": 2,
            "4": 3
        },
    "3":{
            "0": 3,
            "1": 1,
            "2": 3,
            "3": 0,
            "4": 1
        },
    "4":{
            "0": 4,
            "1": 2,
            "2": 5,
            "3": 3,
            "4": 0
        }
}


list_generated_os = []
list_generated_ms = []
list_makespan=[]

final_data_os={}
final_data_ms = {}
total_data = {}
final_data_sum={}
final_data_setup_dict={}
final_data_transport_dict={}


def spt_rule(job_no, operation_no, operation_time_list):
    list_time = operation_time_list[int(job_no) - 1][int(operation_no) - 1]
    a = min(list_time)
    # print(a)
    mach_no = str(list_time.index(a)+1)
    # print(mach_no)
    return mach_no


def es_rule(operation_time_list, list_of_machine, job_time, job_no, operation_no, no_of_machine):
    # operation_time_list = [[[2, 5, 4, 1, 2], [5, 4, 5, 7, 5], [4, 5, 5, 4, 5]],
    #                        [[2, 5, 4, 7, 8], [5, 6, 9, 8, 5], [4, 5, 4, 54, 5]],
    #                        [[9, 8, 6, 7, 9], [6, 1, 2, 5, 4], [2, 5, 4, 2, 4], [4, 5, 2, 1, 5]],
    #                        [[1, 5, 2, 4, 12], [5, 1, 2, 1, 2]]]
    # list_of_machine = [['Machine_no.1', [0, 4]], ['Machine_no.2', [0, 6]], ['Machine_no.3'], ['Machine_no.4', [0, 10]],
    #                    ['Machine_no.5', [0, 4], [4, 9], [9, 19]]]
    # job_time = [9, 19, 10, 6]
    # job_no = 1
    # operation_no = 3
    last_completion_time_job = job_time[int(job_no) - 1]
    for i in range(5):
        if len(list_of_machine[str(i)]) == 0:
            last_completion_time_mach = 0
            # print("last_completion_time_mach", last_completion_time_mach)
        else:
            last_completion_time_mach = list_of_machine[str(i)][-1][1]
            # print("last_completion_time_mach", last_completion_time_mach)
    # breakpoint()
    # print("last_completion_time_job", last_completion_time_job)
    list_time = operation_time_list[int(job_no) - 1][int(operation_no) - 1]
    list_start_time_machine = []
    for mach_no_value in range(len(list_time)):
        if len(list_of_machine[str(mach_no_value)]) == 0:
            list_start_time_machine.append(last_completion_time_job)
        else:
            last_completion_time_mach = list_of_machine[str(mach_no_value)][-1][1]
            # print(last_completion_time_mach)
            if last_completion_time_mach > last_completion_time_job:
                list_start_time_machine.append(last_completion_time_mach)
            elif last_completion_time_mach < last_completion_time_job:
                list_start_time_machine.append(last_completion_time_job)
    # print(list_start_time_machine)
    min_start_time = min(list_start_time_machine)
    list_of_same_start = []
    for i in range(len(list_start_time_machine)):
        if min_start_time == list_start_time_machine[i]:
            list_of_same_start.append(str(i+1))
    # print(list_of_same_start)
    mach_no = str(random.choice(list_of_same_start))
    # print(mach_no)
    return mach_no

def ef_rule(operation_time_list,list_of_machine,job_time,job_no,operation_no,no_of_machine):
    # operation_time_list = [[[2, 5, 4, 1, 2], [5, 4, 5, 7, 5], [4, 5, 5, 4, 5]],
    #                        [[2, 5, 4, 7, 8], [5, 6, 9, 8, 5], [4, 5, 4, 54, 5]],
    #                        [[9, 8, 6, 7, 9], [6, 1, 2, 5, 4], [2, 5, 4, 2, 4], [4, 5, 2, 1, 5]],
    #                        [[1, 5, 2, 4, 12], [5, 1, 2, 1, 2]]]
    # list_of_machine = [['Machine_no.1', [0, 4]], ['Machine_no.2', [0, 6]], ['Machine_no.3'], ['Machine_no.4', [0, 10]],
    #                    ['Machine_no.5', [0, 4], [4, 9], [9, 19]]]
    # job_time = [9, 19, 10, 6]
    # job_no = 1
    # operation_no = 3
    last_completion_time_job = job_time[int(job_no) - 1]
    # print("job_no",job_no)
    # print("operation_no",operation_no)
    for i in range(no_of_machine):
        if len(list_of_machine[str(i)]) ==0:
            last_completion_time_mach = 0
            # print("last_completion_time_mach",last_completion_time_mach)
            # breakpoint()
        else:
            last_completion_time_mach = list_of_machine[str(i)][-1][1]
            # print("last_completion_time_mach", last_completion_time_mach)
    # breakpoint()
    # print("last_completion_time_job",last_completion_time_job)
    list_time = operation_time_list[int(job_no) - 1][int(operation_no) - 1]
    list_earlyfinish_time_machine = []
    for mach_no_value in range(len(list_time)):
        if len(list_of_machine[str(mach_no_value)]) == 0:
            y = last_completion_time_job + operation_time_list[int(job_no) - 1][int(operation_no) - 1][
                int(mach_no_value)]
            list_earlyfinish_time_machine.append(y)
        else:
            last_completion_time_mach = list_of_machine[str(mach_no_value)][-1][1]
            # print(last_completion_time_mach)
            y = max(last_completion_time_mach, last_completion_time_job) + \
                operation_time_list[int(job_no) - 1][int(operation_no) - 1][int(mach_no_value)]
            list_earlyfinish_time_machine.append(y)
    # print(list_earlyfinish_time_machine)
    min_start_time = min(list_earlyfinish_time_machine)
    list_of_same_finish = []
    for i in range(len(list_earlyfinish_time_machine)):
        if min_start_time == list_earlyfinish_time_machine[i]:
            list_of_same_finish.append(str(i+1))
    # print(list_of_same_finish)
    mach_no = str(random.choice(list_of_same_finish))
    # print(mach_no)
    return mach_no


def lum_rule(list_of_machine):
    # list_of_machine = [['Machine_no.1', [0, 4], [6, 15], [15, 18]], ['Machine_no.2', [0, 6], [10, 12]],
    #                    ['Machine_no.3'], ['Machine_no.4', [0, 10]], ['Machine_no.5', [0, 4], [4, 9], [9, 19], [19, 26]]]

    working_time_list = []
    for i in range(len(list_of_machine)):
        if len(list_of_machine[str(i)]) == 0 :
            working_time_list.append(0)
        else:
            e_list = []
            for e in range(len(list_of_machine[str(i)])):
                new_list = list_of_machine[str(i)][e]
                a = new_list[0]
                b = new_list[1]
                y = b - a
                e_list.append(y)
            sum_working_time = sum(e_list)
            working_time_list.append(sum_working_time)
    # print(working_time_list)
    list_of_same_working_time = []
    for i in range(len(working_time_list)):
        if min(working_time_list) == working_time_list[i]:
            list_of_same_working_time.append(str(i+1))
    # print(list_of_same_working_time)
    mach_no = str(random.choice(list_of_same_working_time))
    # print(mach_no)
    return mach_no

def mit_rule(list_of_idle_machine):
    # list_of_idle_machine = [['Idle_Machine_no.1', [4, 6]], ['Idle_Machine_no.2', [6, 10]], ['Idle_Machine_no.3'],
    #                         ['Idle_Machine_no.4'], ['Idle_Machine_no.5']]
    idle_time_list = []
    for i in range(len(list_of_idle_machine)):
        if len(list_of_idle_machine[str(i)]) == 0:
            idle_time_list.append(0)
        else:
            e_list = []
            for e in range(len(list_of_idle_machine[str(i)])):
                new_list = list_of_idle_machine[str(i)][e]
                # print("new_list",new_list)
                # breakpoint()
                a = new_list[0]
                b = new_list[1]
                y = b - a
                e_list.append(y)
            sum_idle_time = sum(e_list)
            idle_time_list.append(sum_idle_time)
    # print(idle_time_list)
    list_of_same_idle_time = []
    for i in range(len(idle_time_list)):
        if min(idle_time_list) == idle_time_list[i]:
            list_of_same_idle_time.append(str(i+1))
    # print(list_of_same_idle_time)
    mach_no = str(random.choice(list_of_same_idle_time))
    # print(mach_no)
    return mach_no

def mgj_rule(machine_time,job_time,job_no):
    # machine_time = [18, 12, 0, 10, 26]
    # job_time = [26, 19, 18, 15]
    # job_no = 2
    list_mini_gap = []
    for i in range(len(machine_time)):
        if machine_time[i] > job_time[int(job_no) - 1]:
            mini_gap = machine_time[i] - job_time[int(job_no) - 1]
        else:
            mini_gap = job_time[int(job_no) - 1] - machine_time[i]
        # print(mini_gap)
        list_mini_gap.append(mini_gap)
    # print(list_mini_gap)
    list_same_gap = []
    for i in range(len(list_mini_gap)):
        if min(list_mini_gap) == list_mini_gap[i]:
            list_same_gap.append(str(i+1))
    # print(list_same_gap)
    mach_no = str(random.choice(list_same_gap))
    # print(mach_no)
    return mach_no
def greedy_algorithm_method(no_jobs, operation_no_list,no_of_machine,operation_sequence_list,machine_selection_list, origianl_sol_list):
    # no_jobs, operation_no_list,no_of_machine,operation_sequence_list,machine_selection_list
    # machine_selection_list = ['5', '5', '5', '1', '5', '1', '4', '2', '1', '1', '2', '1']
    # no_jobs = 4
    # operation_nos_list = [3, 3, 4, 2]
    # no_of_machine = 5
    # operation_sequence_list = ['3', '1', '2', '1', '4', '2', '1', '4', '3', '3', '2', '3']
    test_dict = {}
    final_dict = {}
    final_list = []
    list_makespan = []
    list_sum = []
    operation_nos_list = operation_no_list.copy()
    operation_nos_list = operation_no_list.copy()

    operation_sequence_string = ' '.join([str(elem) for elem in operation_sequence_list])
    # print("operation sequence_list", operation_sequence_list)
    list_generated_os.append(operation_sequence_string)
    machine_selection_string_1 = " ".join([str(elem) for elem in machine_selection_list])
    list_generated_ms.append(machine_selection_string_1)

    machine_selection_string = [machine_selection_string_1]
    # print("mchine selection String", machine_selection_string)

    # print("operation sequence string", operation_sequence_string)
    operation_sequence_original_list = []
    i = 1
    for each in operation_nos_list:
        for element in range(each):
            operation_sequence_original_list.append(i)
        i = i + 1
    # print("operation_sequence_list", operation_sequence_original_list)
    operation_sequence_string_separate = operation_sequence_string.split(" ")
    # print("operation_sequence_string_separate", operation_sequence_string_separate)
    for each in machine_selection_string:
        machine_selection_string_separate = each.split(" ")
    # print("machine_selection_string_separate", machine_selection_string_separate)
    machine_time_duration = {}
    operation_time_list = []
    for each in range(no_jobs):  ### To get operation time matrix ########
        i = 0
        all_list = []
        while i < operation_nos_list[each]:  ###
            # print("i ki value", i)
            # print("each", each)
            mach_time_duration = operation_table[str(each)][str(i)]
            i = i + 1
            # print(mach_time_duration.values())
            each_list = list(mach_time_duration.values())
            all_list.append(each_list)
            # print("all list", all_list)
        operation_time_list.append(all_list)
        # print(operation_time_list)
    ########################........ To get setup time list matrix.........#########################
    setup_time_duration = {}
    setup_time_list = []
    # print("$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ setup inlcusion$$$$$$$$$$$$$$$$$$$$$$$$$$$$")
    for each in range(no_jobs):
        i = 0
        all_list = []
        while i < operation_nos_list[each]:
            # print("i ki value", i)
            # print("each", each)
            setup_time_duration = setup_table[str(each)][str(i)]
            i = i + 1
            # print(setup_time_duration.values())
            every_list = list(setup_time_duration.values())
            all_list.append(every_list)
            # print("all list of setup value", all_list)
        setup_time_list.append(all_list)
        # print(setup_time_list)
    # for each in operation_time_list:
    #     for eac in each:
    #         if eac < 0:
    #             each.remove(eac)
    # # print("new all_list",operation_time_list)
    # print("###################to get machine_sequence from the input#######################")
    j = 0
    i = 0
    k = sum(operation_nos_list)
    mach_seq_list = []
    total_mach_seq_list = []
    mach_ops_list = []
    total_mach_ops_list = []
    mach_setup_list = []
    total_mach_setup_list = []
    k = 1
    for each in machine_selection_string_separate:
#         # print("each",each)
#         # print("i",i)
#         # print("j",j)
#         # print("k", k)
        y = operation_nos_list[k - 1]
        # print("y", y)
        if j < operation_nos_list[k - 1]:
            machine_operation_time_value = operation_time_list[k - 1][j][int(each) - 1]
            setup_time_value = setup_time_list[k - 1][j][int(each) - 1]
            j = j + 1
        else:
            j = 0
            k = k + 1
            # print("j", j)
            total_mach_ops_list.append(mach_ops_list)
            total_mach_seq_list.append(mach_seq_list)
            total_mach_setup_list.append(mach_setup_list)
            mach_ops_list = []
            mach_seq_list = []
            mach_setup_list = []
            machine_operation_time_value = operation_time_list[k - 1][j][int(each) - 1]
            setup_time_value = setup_time_list[k - 1][j][int(each) - 1]
            j = j + 1
        i = i + 1
#         # print("machine_operation_time_value",machine_operation_time_value)
#         # print("setup_time_value",setup_time_value)
        mach_ops_list.append(machine_operation_time_value)
        mach_seq_list.append(each)
        mach_setup_list.append(setup_time_value)
        # print(mach_ops_list)
    total_mach_ops_list.append(mach_ops_list)
    total_mach_seq_list.append(mach_seq_list)
    total_mach_setup_list.append(mach_setup_list)
    # print(total_mach_ops_list)
    # # print(total_mach_seq_list)
    # # print(total_mach_setup_list)

    ###############to get transport time matrix#########################
    total_transport_list = []
    for each in total_mach_seq_list:
        x = 0
        # print(each)
        mach_transport_list = []
        for eac in each:
            y = eac
            # print("y", y)
            # print("x", x)
            if x != y and int(x) > 0:
                mach_transport_time_value = Transport_Table[str(int(x) - 1)][str(int(y) - 1)]
                x = eac
            else:
                x = eac
                mach_transport_time_value = 0
            mach_transport_list.append(mach_transport_time_value)
            # print(mach_transport_list)
        total_transport_list.append(mach_transport_list)
    #     print(total_transport_list)
    # print("machine sequence list", total_mach_seq_list)
    # print("machine operation list", total_mach_ops_list)
    # print("machine setup time list", total_mach_setup_list)
    # print("machine transport time list", total_transport_list)
    # print("operation sequence string", operation_sequence_string)
    # %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%$#
    #####################destruction part of machine sequence###########################
    randgroup = []
    x = random.randint(0, len(machine_selection_string_separate) - 4)
    randgroup.append(x)
    y = random.randint(x+3, len(machine_selection_string_separate) - 1)
    # print(y)
    randgroup.append(y)
    # print("randgroup", randgroup)
    a = randgroup[0]
    b = randgroup[1]
    j = 0  # operation no
    i = 0
    mach_seq_list_for_greedy = []
    list_for_greedy = []
    k = 1  # job_no
    for each in machine_selection_string_separate:
        # print("each", each)
        # print("i", i)
        # print("j", j)
        # print("k", k)
        y = operation_nos_list[k - 1]
        # print("y", y)
        if j < operation_nos_list[k - 1]:
            if i < a or i > b:
                each = each
            else:
                each = None
            j = j + 1
        else:
            j = 0
            k = k + 1
            mach_seq_list_for_greedy.append(list_for_greedy)
            list_for_greedy = []
            if i < a or i > b:
                each = each
            else:
                each = None
            j = j + 1
        i = i + 1
        list_for_greedy.append(each)
    mach_seq_list_for_greedy.append(list_for_greedy)
    # print("mach_seq_list_for_greedy",mach_seq_list_for_greedy)
    # breakpoint()
    ################################end of destruction###################################
    last_job_on_machine = [None for _ in range(no_of_machine)]
    job_time = [0 for _ in range(no_jobs)]
    machine_time = [0 for _ in range(no_of_machine)]
    temp_cont_job_op = [None for _ in range(no_jobs)]
    list_of_machine = []
    list_of_jobsequence_machine = []
    list_of_idle_machine = []
    list_of_waiting_jobs = []
    list_of_setup_time = [0 for _ in range(no_of_machine)]
    list_of_transport_time = [0 for _ in range(no_of_machine)]
    time_duration = []
    temp_list_idle_machine = []
    ######################################################################
    new_machine_selection_string = []
    ######################################################################
    last_job_on_machine = [None for _ in range(no_of_machine)]
    job_time = [0 for _ in range(no_jobs)]
    machine_time = [0 for _ in range(no_of_machine)]
    temp_cont_job_op = [None for _ in range(no_jobs)]
    last_machine_on_job = [None for _ in range(no_jobs)]
    list_of_machine = {}
    list_of_ful_time_machine = {}
    list_of_jobsequence_flow = {}
    list_of_ful_jobsequence_flow = {}
    list_of_jobsetup_flow = {}
    list_of_jobtransport_flow = {}
    list_of_idle_machine = {}
    list_of_idletime_allocjob = []  # to know the last machine on allocation of idle time on selected machine
    list_of_waiting_jobs = []
    list_of_setup_time = {}
    list_of_transport_time = {}
    dict_of_setup_time = {}
    dict_of_transport_time = {}
    time_duration = []
    temp_list_idle_machine = []
    for one in range(no_of_machine):
        list_of_machine[str(one)] = []
    # print("list_of_machine", list_of_machine)
    for one in range(no_of_machine):
        list_of_ful_time_machine[str(one)] = []
    # print("list_of_full_time_machine", list_of_ful_time_machine)
    for eve in range(no_of_machine):
        list_of_jobsequence_flow[str(eve)] = []
    # print("list_of_jobsequence_flow", list_of_jobsequence_flow)
    for eve in range(no_of_machine):
        list_of_ful_jobsequence_flow[str(eve)] = []
    # print("list_of_ful_jobsequence_flow", list_of_ful_jobsequence_flow)
    for eve1 in range(no_of_machine):
        list_of_jobsetup_flow[str(eve1)] = []
    # print("list_of_jobsetup_flow", list_of_jobsetup_flow)
    for eve2 in range(no_of_machine):
        list_of_jobtransport_flow[str(eve2)] = []
    # print("list_of_jobtransport_flow", list_of_jobtransport_flow)
    for each1 in range(no_of_machine):
        list_of_setup_time[str(each1)] = []
    # print("list_of_setup_time", list_of_setup_time)
    for each3 in range(no_of_machine):
        list_of_transport_time[str(each3)] = []
    # print("list_of_transport time", list_of_transport_time)
    for two in range(no_of_machine):
        list_of_idle_machine[str(two)] = []
        # print("list of idle machine", list_of_idle_machine)
        idle_machine_no = ["Idle_Machine_no." + str(two + 1)]
        temp_list_idle_machine.append(
            idle_machine_no[0])  # it is used to remove (idle machine no) to get only idle duration from insertion list
    for three in range(no_of_machine):
        idle_machine_no = ["Idle_Machine_no." + str(three + 1)]
        list_of_idletime_allocjob.append(idle_machine_no)
    i = 0  # this is used for job operaton update in temp container of job operation
    operation_no = 0
    list_operation_no = []
    for each in operation_sequence_string_separate:
        idle_time_machine = None
        waiting_time_job = None
        job_no = each
        # print("temporary container of job operation", temp_cont_job_op)
        # print("***********")
        # print("last job on machine", last_job_on_machine)
        # print("job_time", job_time)
        # print("machine time", machine_time)
        list_operation_no.append(int(each))
        operation_no = list_operation_no.count(int(each))
        # print("operation no", operation_no)
        # print("each", each)
        idle_allocation = 0  ###########this is used for idle time insertion and to get out of loop using break######
        if temp_cont_job_op[int(each) - 1] == None:  ########## if job starts its first operation
            # mach_no = total_mach_seq_list[int(each) - 1][0]  ##machine no
            x = total_mach_ops_list[int(each) - 1][0]  # to get operation time of job on macine no
            y = total_mach_setup_list[int(each) - 1][0]  # to get set up time for job on machine
            z = total_transport_list[int(each) - 1][0]  # to get transport time for job on machine
            last_completion_time = job_time[int(each) - 1]  # last completion time of job may be same or other machine
            # print("Job no ............", each)
            # print("operation no", operation_no)
            # print("operation time_______________", x)
            # print("setup time____________________", y)
            # print("transport time________________", z)
            # print("last completion time of job", last_completion_time)
            mach_no_greedy = mach_seq_list_for_greedy[int(each) - 1][0]
            if mach_no_greedy == None:
                # print("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@greedy@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@")
                my_greedy_list = ["spt_rule", "es_rule", "ef_rule", "lum_rule", "mit_rule", "mgj_rule"]
                a = random.choice(my_greedy_list)
                if a == "spt_rule":
                    # print("spt_rule")
                    mach_no = spt_rule(job_no, operation_no, operation_time_list)
                elif a == "es_rule":
                    # print("es_rule")
                    mach_no = es_rule(operation_time_list, list_of_machine, job_time, job_no, operation_no,no_of_machine)
                elif a == "ef_rule":
                    # print("ef_rule")
                    mach_no = ef_rule(operation_time_list, list_of_machine, job_time, job_no, operation_no,no_of_machine)
                elif a == "lum_rule":
                    # print("lum_rule")
                    mach_no = lum_rule(list_of_machine)
                elif a == "mit_rule":
                    # print("mit_rule")
                    mach_no = mit_rule(list_of_idle_machine)
                else:
                    # print("mgj_rule")
                    mach_no = mgj_rule(machine_time, job_time, each)
                # print("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@greedy@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@")
            else:
                mach_no = mach_seq_list_for_greedy[int(each) - 1][0]
            # print("job time", job_time)
            # print("machine_time", machine_time)
            insertion_list = list_of_idle_machine[str(int(mach_no) - 1)]  # to get duration from each machine idle time
            # print("insertion_list", insertion_list)
            # print("list of idle machine", list_of_idle_machine)
            if len(insertion_list) > 0:
                for each_list in insertion_list:
                    if each_list[2] == each and each_list[2] != each_list[3]:
                        f = last_completion_time + x  # last completion tim
                        g = each_list[0] + x
                        if each_list[1] >= max(f, g):
                            # print("$$$$$$$$$$$$$$$$$$$$$$--------START OF INSERTION----1111--$$$$$$$$$$$$$$$$$$$$$$$$$")
                            # breakpoint()
                            my_duration = max(each_list[0], last_completion_time + z)
                            time_duration = [my_duration]
                            # print("timeduration", time_duration)
                            Total_process_time = time_duration[0] + x
                            list_of_machine[str(int(mach_no) - 1)].append([Total_process_time - x, Total_process_time])
                            list_of_ful_time_machine[str(int(mach_no) - 1)].append(
                                [time_duration[0], Total_process_time])
                            # print("total process time for insertion", Total_process_time)
                            time_duration.append(Total_process_time)
                            list_of_idle_machine[str(int(mach_no) - 1)].remove(each_list)
                            if time_duration[1] < each_list[1]:
                                idle_time_machine1 = [time_duration[1], each_list[1], each, each_list[3]]
                                if last_completion_time > each_list[0]:
                                    idle_time_machine2 = [each_list[0], last_completion_time, each_list[2], each]
                                    list_of_idle_machine[str(int(mach_no) - 1)].append(idle_time_machine1)
                                    list_of_idle_machine[str(int(mach_no) - 1)].append(idle_time_machine2)
                                #                 print("list of idle machine", list_of_idle_machine)
                                else:
                                    list_of_idle_machine[str(int(mach_no) - 1)].append(idle_time_machine1)
                            elif last_completion_time > each_list[0]:
                                idle_time_machine3 = [each_list[0], last_completion_time, each_list[2], each]
                                list_of_idle_machine[str(int(mach_no) - 1)].append(idle_time_machine3)
                            # print("idle time machine", idle_time_machine)
                            temp_cont_job_op[int(each) - 1] = 0
                            job_time[int(each) - 1] = Total_process_time
                            list_of_idletime_allocjob[int(mach_no) - 1].append(each)
                            # print("list_of_idletime_allocjob", list_of_idletime_allocjob)
                            idle_allocation = 1
                            break
                    elif each_list[2] != each_list[3] and each_list[2] != each:
                        f = last_completion_time + x   # last completion tim
                        g = each_list[0] + x + y
                        if each_list[1] >= max(f, g):
                            #         print("$$$$$$$$$$$$$$$$$$$$$$--------START OF INSERTION----1111--$$$$$$$$$$$$$$$$$$$$$$$$$")
                            # breakpoint()
                            my_duration = max(each_list[0] + y, last_completion_time + z)
                            time_duration = [my_duration]
                            #         print("timeduration", time_duration)
                            Total_process_time = time_duration[0] + x
                            list_of_machine[str(int(mach_no) - 1)].append([Total_process_time - x, Total_process_time])
                            list_of_ful_time_machine[str(int(mach_no) - 1)].append(
                                [time_duration[0], Total_process_time])
                            #         print("total process time for insertion", Total_process_time)
                            time_duration.append(Total_process_time)
                            list_of_idle_machine[str(int(mach_no) - 1)].remove(each_list)
                            if time_duration[1] < each_list[1]:
                                idle_time_machine1 = [time_duration[1], each_list[1], each, each_list[3]]
                                if last_completion_time > each_list[0]:
                                    idle_time_machine2 = [each_list[0], last_completion_time, each_list[2], each]
                                    list_of_idle_machine[str(int(mach_no) - 1)].append(idle_time_machine1)
                                    list_of_idle_machine[str(int(mach_no) - 1)].append(idle_time_machine2)
                                #                 print("list of idle machine", list_of_idle_machine)
                                else:
                                    list_of_idle_machine[str(int(mach_no) - 1)].append(idle_time_machine1)
                            elif last_completion_time > each_list[0]:
                                idle_time_machine3 = [each_list[0], last_completion_time, each_list[2], each]
                                list_of_idle_machine[str(int(mach_no) - 1)].append(idle_time_machine3)
                            #         print("idle time machine", idle_time_machine)
                            temp_cont_job_op[int(each) - 1] = 0
                            job_time[int(each) - 1] = Total_process_time
                            list_of_idletime_allocjob[int(mach_no) - 1].append(each)
                            #         print("list_of_idletime_allocjob", list_of_idletime_allocjob)
                            list_of_setup_time[str(int(mach_no) - 1)].append(
                                [Total_process_time - x - y, Total_process_time - x])
                            list_of_jobsetup_flow[str(int(mach_no) - 1)].append(each + str(operation_no) + str(mach_no))
                            #         print("list_of_jobsetup_flow", list_of_jobsetup_flow)
                            idle_allocation = 1
                            break
                        # breakpoint()
            if idle_allocation != 1:
                time_duration = [max(job_time[int(each) - 1], machine_time[int(mach_no) - 1])]
                # print("last completion of job", job_time[int(each) - 1])
                # print("last completion of machine", machine_time[int(mach_no) - 1])
                # print("time_duration", time_duration)
                # print("this opeation is first of the jobs******************************************")
                Total_process_time = time_duration[0] + x + y
                # print("total proces time", Total_process_time)
                if job_time[int(each) - 1] > machine_time[int(mach_no) - 1]:
                    idle_time_machine = [machine_time[int(mach_no) - 1], Total_process_time - x - y,
                                         last_job_on_machine[int(mach_no) - 1],each]
                # print("job no......", each)
                # print("time duration**************", time_duration)  # last completion time
                # print("idle_time_machine..........", idle_time_machine)
                # # print("waiting_time_job",waiting_time_job)
                job_time[int(each) - 1] = Total_process_time
                # print("job_time111", job_time)
                last_job_on_machine[int(mach_no) - 1] = each
                # print("last job on machine111", last_job_on_machine)
                last_machine_on_job[int(each) - 1] = mach_no
                # print("last machine on job111", last_machine_on_job)
                machine_time[int(mach_no) - 1] = Total_process_time
                # print("machine time 111", machine_time)
                temp_cont_job_op[int(each) - 1] = 0
                # print("temp cont job op 111", temp_cont_job_op)
                time_duration.append(Total_process_time)
                # print("time duration 111", time_duration)
                list_of_machine[str(int(mach_no) - 1)].append([Total_process_time - x, Total_process_time])
                list_of_ful_time_machine[str(int(mach_no) - 1)].append([time_duration[0], Total_process_time])
                # print("list_of_mchine", list_of_machine)
                if y != 0:
                    list_of_setup_time[str(int(mach_no) - 1)].append(
                        [Total_process_time - x - y, Total_process_time - x])
                    list_of_jobsetup_flow[str(int(mach_no) - 1)].append(each + str(operation_no) + str(mach_no))
                #     print("list_of_jobsetup_flow", list_of_jobsetup_flow)
                # print("list of setup time", list_of_setup_time)
                # print("list of transport time", list_of_transport_time)
                if idle_time_machine != None:
                    list_of_idle_machine[str(int(mach_no) - 1)].append(idle_time_machine)
                    idle_allocation = "Yes"
                # print("list of idle machine", list_of_idle_machine)
        else:
            allocation = "No"
            # print("&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&")
            i = temp_cont_job_op[int(each) - 1]
            x = total_mach_ops_list[int(each) - 1][i + 1]
            y = total_mach_setup_list[int(each) - 1][i + 1]
            z = total_transport_list[int(each) - 1][i + 1]
            last_completion_time = job_time[int(each) - 1]
            mach_no_greedy = mach_seq_list_for_greedy[int(each) - 1][i + 1]
            # print("Job no ............", each)
            # print("operation no", operation_no)
            # print("operation time_______________", x)
            # print("setup time____________________", y)
            # print("transport time________________", z)
            # print("last completion time of job", last_completion_time)
            # print("last job on machine", last_job_on_machine[int(mach_no) - 1])
            # print("job_time", job_time)
            if mach_no_greedy == None:
                # print("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@greedy@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@")
                my_greedy_list = ["spt_rule", "es_rule", "ef_rule", "lum_rule", "mit_rule", "mgj_rule"]
                a = random.choice(my_greedy_list)
                if a == "spt_rule":
                    # print("spt_rule")
                    mach_no = spt_rule(job_no, operation_no, operation_time_list)
                elif a == "es_rule":
                    # print("es_rule")
                    mach_no = es_rule(operation_time_list, list_of_machine, job_time, job_no, operation_no, no_of_machine)
                elif a == "ef_rule":
                    # print("ef_rule")
                    mach_no = ef_rule(operation_time_list, list_of_machine, job_time, job_no, operation_no,no_of_machine)
                elif a == "lum_rule":
                    # print("lum_rule")
                    mach_no = lum_rule(list_of_machine)
                elif a == "mit_rule":
                    # print("mit_rule")
                    mach_no = mit_rule(list_of_idle_machine)
                else:
                    # print("mgj_rule")
                    mach_no = mgj_rule(machine_time, job_time, job_no)
                # print("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@greedy@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@")
            else:
                mach_no = mach_seq_list_for_greedy[int(each) - 1][i + 1]
            insertion_list = list_of_idle_machine[str(int(mach_no) - 1)]
            # print(insertion_list)
            # print("list of idle machine", list_of_idle_machine)
            # print("list_of_idletime_allocjob", list_of_idletime_allocjob)
            if len(insertion_list) > 0:
                for each_list in insertion_list:
                    if each_list[2] == each and each_list[2] != each_list[3]:
                        f = last_completion_time + z + x
                        g = each_list[0] + x
                        if each_list[1] >= max(f, g):
                            # print("$$$$$$$$$$$$$$$$$$$$$$--------START OF INSERTION----22222--$$$$$$$$$$$$$$$$$$$$$$$$$")
                            # breakpoint()
                            my_duration = max(each_list[0], last_completion_time + z)
                            time_duration = [my_duration]
                            # print("timeduration", time_duration)
                            Total_process_time = time_duration[0] + x
                            list_of_machine[str(int(mach_no) - 1)].append([Total_process_time - x, Total_process_time])
                            list_of_ful_time_machine[str(int(mach_no) - 1)].append(
                                [time_duration[0], Total_process_time])
                            # print("total process time for insertion", Total_process_time)
                            time_duration.append(Total_process_time)
                            list_of_idle_machine[str(int(mach_no) - 1)].remove(each_list)
                            if time_duration[1] < each_list[1]:
                                idle_time_machine1 = [time_duration[1], each_list[1], each, each_list[3]]
                                if last_completion_time > each_list[0]:
                                    idle_time_machine2 = [each_list[0], last_completion_time, each_list[2], each]
                                    list_of_idle_machine[str(int(mach_no) - 1)].append(idle_time_machine1)
                                    list_of_idle_machine[str(int(mach_no) - 1)].append(idle_time_machine2)
                                #                 print("list of idle machine", list_of_idle_machine)
                                else:
                                    list_of_idle_machine[str(int(mach_no) - 1)].append(idle_time_machine1)
                            elif last_completion_time > each_list[0]:
                                idle_time_machine3 = [each_list[0], last_completion_time, each_list[2], each]
                                list_of_idle_machine[str(int(mach_no) - 1)].append(idle_time_machine3)
                            # print("idle time machine", idle_time_machine)
                            temp_cont_job_op[int(each) - 1] = i + 1
                            job_time[int(each) - 1] = Total_process_time
                            list_of_idletime_allocjob[int(mach_no) - 1].append(each)
                            # print("list_of_idletime_allocjob", list_of_idletime_allocjob)
                            list_of_transport_time[str(int(mach_no) - 1)].append(
                                [Total_process_time - x - z, Total_process_time - x])
                            list_of_jobtransport_flow[str(int(mach_no) - 1)].append(
                                each + str(operation_no) + str(mach_no))
                            # print("list_of_jobtransport_flow", list_of_jobtransport_flow)
                            idle_allocation = 1
                            break
                    elif each_list[2] != each_list[3] and each_list[2] != each:
                        f = last_completion_time + z + x
                        g = each_list[0] + x + y
                        if each_list[1] >= max(f, g):
                            #         print("$$$$$$$$$$$$$$$$$$$$$$--------START OF INSERTION----22222--$$$$$$$$$$$$$$$$$$$$$$$$$")
                            # breakpoint()
                            my_duration = max(each_list[0] + y, last_completion_time + z)
                            time_duration = [my_duration]
                            #         print("timeduration", time_duration)
                            Total_process_time = time_duration[0] + x
                            list_of_machine[str(int(mach_no) - 1)].append([Total_process_time - x, Total_process_time])
                            list_of_ful_time_machine[str(int(mach_no) - 1)].append(
                                [time_duration[0], Total_process_time])
                            #         print("total process time for insertion", Total_process_time)
                            time_duration.append(Total_process_time)
                            list_of_idle_machine[str(int(mach_no) - 1)].remove(each_list)
                            if time_duration[1] < each_list[1]:
                                idle_time_machine1 = [time_duration[1], each_list[1], each,each_list[3]]
                                if last_completion_time > each_list[0]:
                                    idle_time_machine2 = [each_list[0], last_completion_time, each_list[2], each]
                                    list_of_idle_machine[str(int(mach_no) - 1)].append(idle_time_machine1)
                                    list_of_idle_machine[str(int(mach_no) - 1)].append(idle_time_machine2)
                                #                 print("list of idle machine", list_of_idle_machine)
                                else:
                                    list_of_idle_machine[str(int(mach_no) - 1)].append(idle_time_machine1)
                            elif last_completion_time > each_list[0]:
                                idle_time_machine3 = [each_list[0], last_completion_time, each_list[2], each]
                                list_of_idle_machine[str(int(mach_no) - 1)].append(idle_time_machine3)
                            #         print("idle time machine", idle_time_machine)
                            temp_cont_job_op[int(each) - 1] = i + 1
                            job_time[int(each) - 1] = Total_process_time
                            list_of_idletime_allocjob[int(mach_no) - 1].append(each)
                            #         print("list_of_idletime_allocjob", list_of_idletime_allocjob)
                            list_of_setup_time[str(int(mach_no) - 1)].append(
                                [Total_process_time - x - y, Total_process_time - x])
                            list_of_jobsetup_flow[str(int(mach_no) - 1)].append(each + str(operation_no) + str(mach_no))
                            #         print("list_of_jobsetup_flow", list_of_jobsetup_flow)
                            list_of_transport_time[str(int(mach_no) - 1)].append(
                                [Total_process_time - x - z, Total_process_time - x])
                            list_of_jobtransport_flow[str(int(mach_no) - 1)].append(
                                each + str(operation_no) + str(mach_no))
                            #         print("list_of_jobtransport_flow", list_of_jobtransport_flow)
                            idle_allocation = 1
            if idle_allocation != 1:
                time_duration = [max(job_time[int(each) - 1], machine_time[int(mach_no) - 1])]
                # print("last completion time of job", job_time[int(each) - 1])
                # print("last completion time of machine", machine_time[int(mach_no) - 1])
                # print("time_duration", time_duration)
                # print("this operation is for not first of the job******************************************")
                # print("job no......", each)
                # print("operation no", operation_no)
                # print("time duration**************", time_duration)
                # print("operation time_______________", x)
                # print("setup time____________________", y)
                # print("transport time________________", z)
                # print("idle_time_machine..........", idle_time_machine)
                # print("waiting_time_job", waiting_time_job)
                if last_job_on_machine[int(mach_no) - 1] == each:
                    if last_machine_on_job[int(each) - 1] == mach_no:
                        Total_process_time = time_duration[0] + x
                        if job_time[int(each) - 1] > machine_time[int(mach_no) - 1]:
                            idle_time_machine = [machine_time[int(mach_no) - 1], Total_process_time - x,
                                                 last_job_on_machine[int(mach_no) - 1],each]
                    elif last_machine_on_job[int(each) - 1] != mach_no:
                        Total_process_time = time_duration[0] + x + z
                        list_of_transport_time[str(int(mach_no) - 1)].append(
                            [Total_process_time - x - z, Total_process_time - x])
                        if job_time[int(each) - 1] > machine_time[int(mach_no) - 1]:
                            idle_time_machine = [machine_time[int(mach_no) - 1], Total_process_time - x,
                                                 last_job_on_machine[int(mach_no) - 1],each]
                    list_of_ful_time_machine[str(int(mach_no) - 1)].append([time_duration[0], Total_process_time])
                else:
                    # print("machine time taken with y", machine_time[int(mach_no) - 1] + y)
                    # print("job time with tken with transport", job_time[int(each) - 1] + z)
                    Total_process_time = max(machine_time[int(mach_no) - 1] + y, job_time[int(each) - 1] + z) + x
                    if job_time[int(each) - 1] > machine_time[int(mach_no) - 1]:
                        idle_time_machine = [machine_time[int(mach_no) - 1], Total_process_time - x - y,
                                             last_job_on_machine[int(mach_no) - 1],each]
                    if (machine_time[int(mach_no) - 1] + y) >= (job_time[int(each) - 1] + z):
                        list_of_ful_time_machine[str(int(mach_no) - 1)].append(
                            [machine_time[int(mach_no) - 1], Total_process_time])
                    elif (machine_time[int(mach_no) - 1] + y) < (job_time[int(each) - 1] + z):
                        list_of_ful_time_machine[str(int(mach_no) - 1)].append(
                            [job_time[int(each) - 1], Total_process_time])
                    if y != 0:
                        list_of_setup_time[str(int(mach_no) - 1)].append(
                            [Total_process_time - x - y, Total_process_time - x])
                        list_of_jobsetup_flow[str(int(mach_no) - 1)].append(each + str(operation_no) + str(mach_no))
                        # print("list_of_jobsetup_flow", list_of_jobsetup_flow)
                    if z != 0:
                        list_of_transport_time[str(int(mach_no) - 1)].append(
                            [Total_process_time - x - z, Total_process_time - x])
                        list_of_jobtransport_flow[str(int(mach_no) - 1)].append(each + str(operation_no) + str(mach_no))
                # #         print("list_of_jobtransport_flow", list_of_jobtransport_flow)
                # print("total process tme", Total_process_time)
                job_time[int(each) - 1] = Total_process_time
                last_job_on_machine[int(mach_no) - 1] = each
                last_machine_on_job[int(each) - 1] = mach_no
                # print("last machine on job222", last_machine_on_job)
                machine_time[int(mach_no) - 1] = Total_process_time
                temp_cont_job_op[int(each) - 1] = i + 1
                time_duration.append(Total_process_time)
                list_of_machine[str(int(mach_no) - 1)].append([Total_process_time - x, Total_process_time])
                # print("list of machine", list_of_machine)
                # print("list of setup time", list_of_setup_time)
                # print("list of transport time", list_of_transport_time)
                if idle_time_machine != None:
                    list_of_idle_machine[str(int(mach_no) - 1)].append(idle_time_machine)
                    idle_allocation = "Yes"
                # print("list of idle machine", list_of_idle_machine)
        list_of_jobsequence_flow[str(int(mach_no) - 1)].append(each + str(operation_no) + str(mach_no))
        # print("list_of_jobsequence_flow", list_of_jobsequence_flow)
        # print("list_of_jobsetup_flow", list_of_jobsetup_flow)
        # print("list_of_jobtransport_flow", list_of_jobtransport_flow)
        new_machine_selection_string.append(mach_no)
    list_total_setup_time = list(list_of_setup_time.values())
    # print("list_total_setup_time", list_total_setup_time)
    sum_setup = 0
    sum_transport = 0
    for eacher12 in range(no_of_machine):
        list1 = list_total_setup_time[eacher12]
        for each in list1:
            diff = each[1] - each[0]
            sum_setup = sum_setup + diff
    total_setup_time = sum_setup
    list_total_transport_time = list(list_of_transport_time.values())
    sum_transport = 0
    for eacher123 in range(no_of_machine):
        list2 = list_total_transport_time[eacher123]
        for each in list2:
            diff = each[1] - each[0]
            sum_transport = sum_transport + diff
    total_transport_time = sum_transport
    # print("total_setup_time", total_setup_time)
    # print("total_transport_time", total_transport_time)
    add_list = []
    for eacher in range(no_of_machine):
        each = list_of_machine[str(eacher)]
        for i in range(len(each)):
            add_list.append(each[i])
    # print(add_list)
    list_new = []
    for each in add_list:
        list_new.append(each[0])
        list_new.append(each[1])
    test_value = max(list_new)
    # print("test_value", test_value)
    makespan_time = test_value
    sum_three = 0.33*makespan_time + 0.33*total_setup_time + 0.33*total_transport_time
    final_data_os[operation_sequence_string] = [makespan_time, total_setup_time, total_transport_time]
    final_data_ms[machine_selection_string_1] = [makespan_time, total_setup_time, total_transport_time]
    list_sum.append(sum_three)
    new_machine_selection_string_1 = " ".join([str(elem) for elem in new_machine_selection_string])
    # $############################################
    sum_compare = origianl_sol_list
    if sum_compare[3] > sum_three:
        final_new_machine_selection_string = new_machine_selection_string_1
        total_data[operation_sequence_string + "+" + final_new_machine_selection_string] = [makespan_time, total_setup_time,
                                                               total_transport_time, sum_three]
    else:
        final_new_machine_selection_string = machine_selection_string_1
        total_data[operation_sequence_string + "+" + final_new_machine_selection_string] = sum_compare
    # print("new_machine_selection_string", new_machine_selection_string)
    # print("final new machine selection string", final_new_machine_selection_string)
    #############################################
    # print("list sum", list_sum)
    # # print("final_data_os",final_data_os)
    # # print("final data ms",final_data_ms)

    # print(total_data)
    return total_data

# print("@@@@@@@@@@@@@@@@@@END OF EACH LOOP@@@@@@@@@@@@@@@@@@@@@@@@")

# funciton = greedy_algorithm_method()